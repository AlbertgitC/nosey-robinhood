{"ast":null,"code":"'use strict';\n\nvar E = require('linq'); //\n// An iterator that can step multiple other iterators at once.\n//\n\n\nvar ConcatIterator = function (iterators) {\n  var self = this;\n  self._curIterator = -1;\n  self._iterators = iterators;\n};\n\nmodule.exports = ConcatIterator;\n\nConcatIterator.prototype.moveNext = function () {\n  var self = this;\n\n  if (self._iterators.length === 0) {\n    return false;\n  }\n\n  if (self._curIterator < 0) {\n    ++self._curIterator;\n  }\n\n  for (;;) {\n    if (self._iterators[self._curIterator].moveNext()) {\n      return true;\n    }\n\n    if (self._curIterator >= self._iterators.length - 1) {\n      return false;\n    }\n\n    ++self._curIterator;\n  }\n};\n\nConcatIterator.prototype.getCurrent = function () {\n  var self = this;\n\n  if (self._curIterator >= 0) {\n    return self._iterators[self._curIterator].getCurrent();\n  } else {\n    return undefined;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}