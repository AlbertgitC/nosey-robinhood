{"ast":null,"code":"var ctx = require('./$.ctx'),\n    call = require('./$.iter-call'),\n    isArrayIter = require('./$.is-array-iter'),\n    anObject = require('./$.an-object'),\n    toLength = require('./$.to-length'),\n    getIterFn = require('./core.get-iterator-method');\n\nmodule.exports = function (iterable, entries, fn, that) {\n  var iterFn = getIterFn(iterable),\n      f = ctx(fn, that, entries ? 2 : 1),\n      index = 0,\n      length,\n      step,\n      iterator;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!'); // fast case for arrays with default iterator\n\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    call(iterator, f, step.value, entries);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}