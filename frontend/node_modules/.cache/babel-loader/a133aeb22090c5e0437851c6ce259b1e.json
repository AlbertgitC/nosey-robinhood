{"ast":null,"code":"// 26.1.6 Reflect.get(target, propertyKey [, receiver])\nvar $ = require('./$'),\n    has = require('./$.has'),\n    $export = require('./$.export'),\n    isObject = require('./$.is-object'),\n    anObject = require('./$.an-object');\n\nfunction get(target, propertyKey\n/*, receiver*/\n) {\n  var receiver = arguments.length < 3 ? target : arguments[2],\n      desc,\n      proto;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (desc = $.getDesc(target, propertyKey)) return has(desc, 'value') ? desc.value : desc.get !== undefined ? desc.get.call(receiver) : undefined;\n  if (isObject(proto = $.getProto(target))) return get(proto, propertyKey, receiver);\n}\n\n$export($export.S, 'Reflect', {\n  get: get\n});","map":null,"metadata":{},"sourceType":"script"}