{"ast":null,"code":"// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar $ = require('./$'),\n    has = require('./$.has'),\n    $export = require('./$.export'),\n    createDesc = require('./$.property-desc'),\n    anObject = require('./$.an-object'),\n    isObject = require('./$.is-object');\n\nfunction set(target, propertyKey, V\n/*, receiver*/\n) {\n  var receiver = arguments.length < 4 ? target : arguments[3],\n      ownDesc = $.getDesc(anObject(target), propertyKey),\n      existingDescriptor,\n      proto;\n\n  if (!ownDesc) {\n    if (isObject(proto = $.getProto(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n\n    ownDesc = createDesc(0);\n  }\n\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    existingDescriptor = $.getDesc(receiver, propertyKey) || createDesc(0);\n    existingDescriptor.value = V;\n    $.setDesc(receiver, propertyKey, existingDescriptor);\n    return true;\n  }\n\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', {\n  set: set\n});","map":null,"metadata":{},"sourceType":"script"}