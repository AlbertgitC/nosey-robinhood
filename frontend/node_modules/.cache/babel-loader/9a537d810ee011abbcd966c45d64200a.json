{"ast":null,"code":"'use strict';\n\nvar SelectManyPairsIterable = function (iterable, selector) {\n  var self = this;\n  self._iterable = iterable;\n  self._selector = selector;\n};\n\nmodule.exports = SelectManyPairsIterable;\n\nvar SelectManyIterator = require('../iterators/select-many');\n\nvar Series = require('../series');\n\nvar DataFrame = require('../dataframe');\n\nSelectManyPairsIterable.prototype.getIterator = function () {\n  var self = this;\n  return new SelectManyIterator(self._iterable.getIterator(), function (pair) {\n    var newPairs = self._selector(pair[0], pair[1]);\n\n    if (!Object.isArray(newPairs)) {\n      throw new Error(\"Expected return value from 'Series.selectManyPairs' selector to be an array of pairs, each item in the array represents a new pair in the resulting series.\");\n    }\n\n    for (var pairIndex = 0; pairIndex < newPairs.length; ++pairIndex) {\n      var newPair = newPairs[pairIndex];\n\n      if (!Object.isArray(newPair) || newPair.length !== 2) {\n        throw new Error(\"Expected return value from 'Series.selectManyPairs' selector to be am array of pairs, but item at index \" + pairIndex + \" is not an array with two items: [index, value].\");\n      }\n    }\n\n    return newPairs;\n  });\n};\n\nSelectManyPairsIterable.prototype.getColumnNames = function () {\n  var self = this; // Have to get the first element to get field names.\n\n  var iterator = self._iterable.getIterator();\n\n  for (;;) {\n    // Keep going until we find a non-empty list.\n    if (!iterator.moveNext()) {\n      return [];\n    }\n\n    var pair = iterator.getCurrent();\n\n    var result = self._selector(pair[0], pair[1]);\n\n    if (result.length > 0) {\n      return Object.keys(result[0][1]); // Extract pair value.\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}