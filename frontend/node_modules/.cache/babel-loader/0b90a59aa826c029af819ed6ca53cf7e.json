{"ast":null,"code":"/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\nvar AssertionError = require('assertion-error');\n\nvar flag = require('./flag');\n\nvar type = require('type-detect');\n\nmodule.exports = function (obj, types) {\n  var obj = flag(obj, 'object');\n  types = types.map(function (t) {\n    return t.toLowerCase();\n  });\n  types.sort(); // Transforms ['lorem', 'ipsum'] into 'a lirum, or an ipsum'\n\n  var str = types.map(function (t, index) {\n    var art = ~['a', 'e', 'i', 'o', 'u'].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  if (!types.some(function (expected) {\n    return type(obj) === expected;\n  })) {\n    throw new AssertionError('object tested must be ' + str + ', but ' + type(obj) + ' given');\n  }\n};","map":null,"metadata":{},"sourceType":"script"}