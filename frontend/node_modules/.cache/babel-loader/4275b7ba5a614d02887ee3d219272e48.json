{"ast":null,"code":"'use strict';\n\nvar E = require('linq'); //\n// An iterator that can step multiple other iterators at once.\n//\n\n\nvar PairIterator = function (it1, it2) {\n  var self = this;\n  self._started = false;\n  self._it1 = it1;\n  self._it2 = it2;\n};\n\nmodule.exports = PairIterator;\n\nPairIterator.prototype.moveNext = function () {\n  var self = this;\n\n  if (!self._started) {\n    self._started = true;\n  }\n\n  if (self._it1.moveNext() && self._it2.moveNext()) {\n    return true;\n  }\n\n  return false;\n};\n\nPairIterator.prototype.getCurrent = function () {\n  var self = this;\n\n  if (!self._started) {\n    return undefined;\n  }\n\n  return [self._it1.getCurrent(), self._it2.getCurrent()];\n}; //\n// Bake the iterator into an array.\n//\n\n\nPairIterator.prototype.realize = function () {\n  var self = this;\n  var output = [];\n\n  while (self.moveNext()) {\n    output.push(self.getCurrent());\n  }\n\n  return output;\n};","map":null,"metadata":{},"sourceType":"script"}