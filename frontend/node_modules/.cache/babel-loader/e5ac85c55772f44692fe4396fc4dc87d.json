{"ast":null,"code":"import * as APIUtil from '../util/session_api_util';\nimport jwt_decode from 'jwt-decode';\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT\n});\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\nexport const receiveUserSignIn = () => ({\n  type: RECEIVE_USER_SIGN_IN\n});\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors\n});\nexport const signup = user => dispatch => APIUtil.signup(user).then(() => dispatch(receiveUserSignIn()), err => dispatch(receiveErrors(err.response.data)));\nexport const login = user => dispatch => APIUtil.login(user).then(res => {\n  const token = res.data.token;\n  localStorage.setItem('jwtToken', token);\n  APIUtil.setAuthToken(token);\n  const decoded = jwt_decode(token);\n  dispatch(receiveCurrentUser(decoded));\n}).catch(err => {\n  dispatch(receiveErrors(err.response.data));\n});\nexport const logout = () => dispatch => {\n  // Remove the token from local storage\n  localStorage.removeItem('jwtToken'); // Remove the token from the common axios header\n\n  APIUtil.setAuthToken(false); // Dispatch a logout action\n\n  dispatch(logoutUser());\n};","map":{"version":3,"sources":["/Users/jasimatiyeh/Desktop/aA_work/MERN Project/frontend/src/actions/session_actions.js"],"names":["APIUtil","jwt_decode","RECEIVE_USER_LOGOUT","RECEIVE_CURRENT_USER","RECEIVE_SESSION_ERRORS","RECEIVE_USER_SIGN_IN","logoutUser","type","receiveCurrentUser","currentUser","receiveUserSignIn","receiveErrors","errors","signup","user","dispatch","then","err","response","data","login","res","token","localStorage","setItem","setAuthToken","decoded","catch","logout","removeItem"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,UAAU,GAAG,OAAO;AAC/BC,EAAAA,IAAI,EAAEL;AADyB,CAAP,CAAnB;AAIP,OAAO,MAAMM,kBAAkB,GAAGC,WAAW,KAAK;AAChDF,EAAAA,IAAI,EAAEJ,oBAD0C;AAEhDM,EAAAA;AAFgD,CAAL,CAAtC;AAKP,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACtCH,EAAAA,IAAI,EAAEF;AADgC,CAAP,CAA1B;AAIP,OAAO,MAAMM,aAAa,GAAGC,MAAM,KAAK;AACtCL,EAAAA,IAAI,EAAEH,sBADgC;AAEtCQ,EAAAA;AAFsC,CAAL,CAA5B;AAMP,OAAO,MAAMC,MAAM,GAAGC,IAAI,IAAIC,QAAQ,IACpCf,OAAO,CAACa,MAAR,CAAeC,IAAf,EAAqBE,IAArB,CAA0B,MACxBD,QAAQ,CAACL,iBAAiB,EAAlB,CADV,EAEGO,GAAG,IACJF,QAAQ,CAACJ,aAAa,CAACM,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAd,CAHV,CADK;AAQP,OAAO,MAAMC,KAAK,GAAGN,IAAI,IAAIC,QAAQ,IACnCf,OAAO,CAACoB,KAAR,CAAcN,IAAd,EAAoBE,IAApB,CAAyBK,GAAG,IAAI;AAAA,QACtBC,KADsB,GACZD,GAAG,CAACF,IADQ,CACtBG,KADsB;AAE9BC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAtB,EAAAA,OAAO,CAACyB,YAAR,CAAqBH,KAArB;AACA,QAAMI,OAAO,GAAGzB,UAAU,CAACqB,KAAD,CAA1B;AACAP,EAAAA,QAAQ,CAACP,kBAAkB,CAACkB,OAAD,CAAnB,CAAR;AACD,CAND,EAOGC,KAPH,CAOSV,GAAG,IAAI;AACZF,EAAAA,QAAQ,CAACJ,aAAa,CAACM,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAd,CAAR;AACD,CATH,CADK;AAaP,OAAO,MAAMS,MAAM,GAAG,MAAMb,QAAQ,IAAI;AACtC;AACAQ,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB,EAFsC,CAGtC;;AACA7B,EAAAA,OAAO,CAACyB,YAAR,CAAqB,KAArB,EAJsC,CAKtC;;AACAV,EAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACD,CAPM","sourcesContent":["import * as APIUtil from '../util/session_api_util';\nimport jwt_decode from 'jwt-decode';\n\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT\n});\n\nexport const receiveCurrentUser = currentUser => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser\n});\n\nexport const receiveUserSignIn = () => ({\n  type: RECEIVE_USER_SIGN_IN\n});\n\nexport const receiveErrors = errors => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors\n});\n\n\nexport const signup = user => dispatch => (\n  APIUtil.signup(user).then(() => (\n    dispatch(receiveUserSignIn())\n  ), err => (\n    dispatch(receiveErrors(err.response.data))\n  ))\n);\n\nexport const login = user => dispatch => (\n  APIUtil.login(user).then(res => {\n    const { token } = res.data;\n    localStorage.setItem('jwtToken', token);\n    APIUtil.setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(receiveCurrentUser(decoded))\n  })\n    .catch(err => {\n      dispatch(receiveErrors(err.response.data));\n    })\n);\n\nexport const logout = () => dispatch => {\n  // Remove the token from local storage\n  localStorage.removeItem('jwtToken')\n  // Remove the token from the common axios header\n  APIUtil.setAuthToken(false)\n  // Dispatch a logout action\n  dispatch(logoutUser())\n};"]},"metadata":{},"sourceType":"module"}