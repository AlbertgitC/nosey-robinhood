{"ast":null,"code":"'use strict'; // 26.1.5 Reflect.enumerate(target)\n\nvar $export = require('./$.export'),\n    anObject = require('./$.an-object');\n\nvar Enumerate = function (iterated) {\n  this._t = anObject(iterated); // target\n\n  this._i = 0; // next index\n\n  var keys = this._k = [] // keys\n  ,\n      key;\n\n  for (key in iterated) keys.push(key);\n};\n\nrequire('./$.iter-create')(Enumerate, 'Object', function () {\n  var that = this,\n      keys = that._k,\n      key;\n\n  do {\n    if (that._i >= keys.length) return {\n      value: undefined,\n      done: true\n    };\n  } while (!((key = keys[that._i++]) in that._t));\n\n  return {\n    value: key,\n    done: false\n  };\n});\n\n$export($export.S, 'Reflect', {\n  enumerate: function enumerate(target) {\n    return new Enumerate(target);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}