{"ast":null,"code":"'use strict';\n\nvar $ = require('./$'),\n    isObject = require('./$.is-object'),\n    HAS_INSTANCE = require('./$.wks')('hasInstance'),\n    FunctionProto = Function.prototype; // 19.2.3.6 Function.prototype[@@hasInstance](V)\n\n\nif (!(HAS_INSTANCE in FunctionProto)) $.setDesc(FunctionProto, HAS_INSTANCE, {\n  value: function (O) {\n    if (typeof this != 'function' || !isObject(O)) return false;\n    if (!isObject(this.prototype)) return O instanceof this; // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n\n    while (O = $.getProto(O)) if (this.prototype === O) return true;\n\n    return false;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}