{"ast":null,"code":"// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $ = require('./$'),\n    $export = require('./$.export'),\n    aFunction = require('./$.a-function'),\n    anObject = require('./$.an-object'),\n    isObject = require('./$.is-object'),\n    bind = Function.bind || require('./$.core').Function.prototype.bind; // MS Edge supports only 2 arguments\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\n\n\n$export($export.S + $export.F * require('./$.fails')(function () {\n  function F() {}\n\n  return !(Reflect.construct(function () {}, [], F) instanceof F);\n}), 'Reflect', {\n  construct: function construct(Target, args\n  /*, newTarget*/\n  ) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0:\n          return new Target();\n\n        case 1:\n          return new Target(args[0]);\n\n        case 2:\n          return new Target(args[0], args[1]);\n\n        case 3:\n          return new Target(args[0], args[1], args[2]);\n\n        case 4:\n          return new Target(args[0], args[1], args[2], args[3]);\n      } // w/o altered newTarget, lot of arguments case\n\n\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    } // with altered newTarget, not support built-in constructors\n\n\n    var proto = newTarget.prototype,\n        instance = $.create(isObject(proto) ? proto : Object.prototype),\n        result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}