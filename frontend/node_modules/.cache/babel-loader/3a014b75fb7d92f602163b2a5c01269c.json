{"ast":null,"code":"'use strict';\n\nvar E = require('linq'); //\n// An iterator that can step multiple other iterators at once.\n//\n\n\nvar SelectIterator = function (iterator, selector) {\n  var self = this;\n  self._i = -1;\n  self._iterator = iterator;\n  self._selector = selector;\n};\n\nmodule.exports = SelectIterator;\n\nSelectIterator.prototype.moveNext = function () {\n  var self = this;\n  ++self._i;\n  return self._iterator.moveNext();\n};\n\nSelectIterator.prototype.getCurrent = function () {\n  var self = this;\n  return self._selector(self._iterator.getCurrent(), self._i);\n}; //\n// Bake the iterator into an array.\n//\n\n\nSelectIterator.prototype.realize = function () {\n  var self = this;\n  var output = [];\n\n  while (self.moveNext()) {\n    output.push(self.getCurrent());\n  }\n\n  return output;\n};","map":null,"metadata":{},"sourceType":"script"}